apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion 29
    buildToolsVersion '29.0.1'
    defaultConfig {
        applicationId "cn.jiiiiiin.viewplus"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.08"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // https://developer.android.com/studio/build/multidex.html?hl=zh-cn#keep
        // 由于存在 Dalvik linearAlloc 限制（问题 78035），因此，如果使用 Dalvik 可执行文件分包配置的应用发出非常庞大的内存分配请求，则可能会在运行期间发生崩溃。尽管 Android 4.0（API 级别 14）提高了分配限制，但在 Android 5.0（API 级别 21）之前的 Android 版本上，应用仍有可能遭遇这一限制。
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        additionalParameters = ["--set-max-idx-number=62000"]
        jumboMode true
        javaMaxHeapSize "4g"
    }

    lintOptions {
        abortOnError false
    }
}

ext.versions = [
        'butterknife': '10.2.1',
        'lombok'     : '1.18.12'
]

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    // 源码测试
    implementation project(':vplus-ui')
    // 依赖测试
//    api 'cn.jiiiiiin:vplus-ui:1.0.1'

    // ButterKnife
    // https://github.com/JakeWharton/butterknife/releases
    implementation "com.jakewharton:butterknife:${versions.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${versions.butterknife}"

    //implementation 'androidx.multidex:multidex:2.0.1'
}
